<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CSharp_UnityFramework</name>
    </assembly>
    <members>
        <member name="M:Framework.IO.CustomFile.GetFileHash(System.String)">
            <summary>
            计算文件的hash值 用于比较两个文件是否相同
            </summary>
            <param name="filePath">文件路径</param>
            <returns>文件hash值</returns>
        </member>
        <member name="M:Framework.IO.CustomFile.GetBytesHash(System.Byte[])">
            <summary>
            计算文件的hash值 用于比较两个文件是否相同
            </summary>
            <param name="varArray">文件字节数组</param>
            <returns>文件hash值</returns>
        </member>
        <member name="T:Framework.Pattern.Singleton`1">
            <summary>
            C#单例模式
            </summary>
        </member>
        <member name="P:Framework.Security.DES.Iv">
            <summary>
            DES加密偏移量，必须是>=8位长的字符串
            </summary>
        </member>
        <member name="P:Framework.Security.DES.Key">
            <summary>
            DES加密的私钥，必须是8位长的字符串
            </summary>
        </member>
        <member name="M:Framework.Security.DES.DESEncrypt(System.String)">
            <summary>
            对字符串进行DES加密
            </summary>
            <param name="sourceString">待加密的字符串</param>
            <returns>加密后的BASE64编码的字符串</returns>
        </member>
        <member name="M:Framework.Security.DES.DESDecrypt(System.String)">
            <summary>
            对DES加密后的字符串进行解密
            </summary>
            <param name="encryptedString">待解密的字符串</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="T:Framework.Security.MD5">
            <summary>
            MD5加密不可逆，不需要加密向量
            </summary>
        </member>
        <member name="M:Framework.Security.RSA.RSAEncrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="normaltxt"></param>
            <returns></returns>
        </member>
        <member name="T:Framework.Unity.Pattern.SingletonMono`1">
            <summary>
            MonoBehaviour单例模式
            </summary>
        </member>
        <member name="M:Framework.Unity.Pattern.SingletonMono`1.OnDestroy">
            <summary>  
            When Unity quits, it destroys objects in a random order.  
            In principle, a Singleton is only destroyed when application quits.  
            If any script calls Instance after it have been destroyed,  
              it will create a buggy ghost object that will stay on the Editor scene  
              even after stopping playing the Application. Really bad!  
            So, this was made to be sure we're not creating that buggy ghost object.  
            </summary>  
        </member>
        <member name="F:Framework.Unity.ResourcesMgr.hashtable">
            <summary> 资源缓存集合 </summary>
        </member>
        <!-- 对于成员“M:Framework.Unity.ResourcesMgr.Init”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Framework.Unity.ResourcesMgr.Load``1(System.String,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <member name="M:Framework.Unity.ResourcesMgr.CreateGameObject(System.String,System.Boolean)">
            <summary>
            从Res中创建一个GameObject对象
            </summary>
            <param name="path">路径</param>
            <param name="cache">是否缓存</param>
            <returns></returns>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.audioID">
            <summary>
            The ID of the Audio
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.audioSource">
            <summary>
            The audio source that is responsible for this audio
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.clip">
            <summary>
            Audio clip to play/is playing
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.loop">
            <summary>
            Whether the audio will be lopped
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.persist">
            <summary>
            Whether the audio persists in between scene changes
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.fadeInSeconds">
            <summary>
            How many seconds it needs for the audio to fade in/ reach target volume (if higher than current)
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.fadeOutSeconds">
            <summary>
            How many seconds it needs for the audio to fade out/ reach target volume (if lower than current)
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.playing">
            <summary>
            Whether the audio is currently playing
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.paused">
            <summary>
            Whether the audio is paused
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.stopping">
            <summary>
            Whether the audio is stopping
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.Audio.activated">
            <summary>
            Whether the audio is created and updated at least once. 
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.Play">
            <summary>
            Start playing audio clip from the beggining
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.Play(System.Single)">
            <summary>
            Start playing audio clip from the beggining
            </summary>
            <param name="volume">The target volume</param>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.Stop">
            <summary>
            Stop playing audio clip
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.Pause">
            <summary>
            Pause playing audio clip
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.UnPause">
            <summary>
            Resume playing audio clip
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.Resume">
            <summary>
            Resume playing audio clip
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.SetVolume(System.Single)">
            <summary>
            Sets the audio volume
            </summary>
            <param name="volume">The target volume</param>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.SetVolume(System.Single,System.Single)">
            <summary>
            Sets the audio volume
            </summary>
            <param name="volume">The target volume</param>
            <param name="fadeSeconds">How many seconds it needs for the audio to fade in/out to reach target volume. If passed, it will override the Audio's fade in/out seconds, but only for this transition</param>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.SetVolume(System.Single,System.Single,System.Single)">
            <summary>
            Sets the audio volume
            </summary>
            <param name="volume">The target volume</param>
            <param name="fadeSeconds">How many seconds it needs for the audio to fade in/out to reach target volume. If passed, it will override the Audio's fade in/out seconds, but only for this transition</param>
            <param name="startVolume">Immediately set the volume to this value before beginning the fade. If not passed, the Audio will start fading from the current volume towards the target volume</param>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.Set3DMaxDistance(System.Single)">
            <summary>
            Sets the Audio 3D max distance
            </summary>
            <param name="max">the max distance</param>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.Set3DMinDistance(System.Single)">
            <summary>
            Sets the Audio 3D min distance
            </summary>
            <param name="max">the min distance</param>
        </member>
        <member name="M:Framework.Unity.Sound.Audio.Set3DDistances(System.Single,System.Single)">
            <summary>
            Sets the Audio 3D distances
            </summary>
            <param name="min">the min distance</param>
            <param name="max">the max distance</param>
        </member>
        <member name="P:Framework.Unity.Sound.SoundManager.ignoreDuplicateMusic">
            <summary>
            When set to true, new Audios that have the same audio clip as any other Audio, will be ignored
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.SoundManager.ignoreDuplicateSounds">
            <summary>
            When set to true, new Audios that have the same audio clip as any other Audio, will be ignored
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.SoundManager.ignoreDuplicateUISounds">
            <summary>
            When set to true, new Audios that have the same audio clip as any other Audio, will be ignored
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.SoundManager.globalVolume">
            <summary>
            Global volume
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.SoundManager.globalMusicVolume">
            <summary>
            Global music volume
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.SoundManager.globalSoundsVolume">
            <summary>
            Global sounds volume
            </summary>
        </member>
        <member name="P:Framework.Unity.Sound.SoundManager.globalUISoundsVolume">
            <summary>
            Global UI sounds volume
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.GetAudio(System.Int32)">
            <summary>
            Returns the Audio that has as its id the audioID if one is found, returns null if no such Audio is found
            </summary>
            <param name="audioID">The id of the Audio to be retrieved</param>
            <returns>Audio that has as its id the audioID, null if no such Audio is found</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.GetAudio(UnityEngine.AudioClip)">
            <summary>
            Returns the first occurrence of Audio that plays the given audioClip. Returns null if no such Audio is found
            </summary>
            <param name="audioClip">The audio clip of the Audio to be retrieved</param>
            <returns>First occurrence of Audio that has as plays the audioClip, null if no such Audio is found</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.GetMusicAudio(System.Int32)">
            <summary>
            Returns the music Audio that has as its id the audioID if one is found, returns null if no such Audio is found
            </summary>
            <param name="audioID">The id of the music Audio to be returned</param>
            <returns>Music Audio that has as its id the audioID if one is found, null if no such Audio is found</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.GetMusicAudio(UnityEngine.AudioClip)">
            <summary>
            Returns the first occurrence of music Audio that plays the given audioClip. Returns null if no such Audio is found
            </summary>
            <param name="audioClip">The audio clip of the music Audio to be retrieved</param>
            <returns>First occurrence of music Audio that has as plays the audioClip, null if no such Audio is found</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.GetSoundAudio(System.Int32)">
            <summary>
            Returns the sound fx Audio that has as its id the audioID if one is found, returns null if no such Audio is found
            </summary>
            <param name="audioID">The id of the sound fx Audio to be returned</param>
            <returns>Sound fx Audio that has as its id the audioID if one is found, null if no such Audio is found</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.GetSoundAudio(UnityEngine.AudioClip)">
            <summary>
            Returns the first occurrence of sound Audio that plays the given audioClip. Returns null if no such Audio is found
            </summary>
            <param name="audioClip">The audio clip of the sound Audio to be retrieved</param>
            <returns>First occurrence of sound Audio that has as plays the audioClip, null if no such Audio is found</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.GetUISoundAudio(System.Int32)">
            <summary>
            Returns the UI sound fx Audio that has as its id the audioID if one is found, returns null if no such Audio is found
            </summary>
            <param name="audioID">The id of the UI sound fx Audio to be returned</param>
            <returns>UI sound fx Audio that has as its id the audioID if one is found, null if no such Audio is found</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.GetUISoundAudio(UnityEngine.AudioClip)">
            <summary>
            Returns the first occurrence of UI sound Audio that plays the given audioClip. Returns null if no such Audio is found
            </summary>
            <param name="audioClip">The audio clip of the UI sound Audio to be retrieved</param>
            <returns>First occurrence of UI sound Audio that has as plays the audioClip, null if no such Audio is found</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlayMusic(UnityEngine.AudioClip)">
            <summary>
            Play background music
            </summary>
            <param name="clip">The audio clip to play</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlayMusic(UnityEngine.AudioClip,System.Single)">
            <summary>
            Play background music
            </summary>
            <param name="clip">The audio clip to play</param>
            <param name="volume"> The volume the music will have</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlayMusic(UnityEngine.AudioClip,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Play background music
            </summary>
            <param name="clip">The audio clip to play</param>
            <param name="volume"> The volume the music will have</param>
            <param name="loop">Wether the music is looped</param>
            <param name = "persist" > Whether the audio persists in between scene changes</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlayMusic(UnityEngine.AudioClip,System.Single,System.Boolean,System.Boolean,System.Single,System.Single)">
            <summary>
            Play background music
            </summary>
            <param name="clip">The audio clip to play</param>
            <param name="volume"> The volume the music will have</param>
            <param name="loop">Wether the music is looped</param>
            <param name="persist"> Whether the audio persists in between scene changes</param>
            <param name="fadeInValue">How many seconds it needs for the audio to fade in/ reach target volume (if higher than current)</param>
            <param name="fadeOutValue"> How many seconds it needs for the audio to fade out/ reach target volume (if lower than current)</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlayMusic(UnityEngine.AudioClip,System.Single,System.Boolean,System.Boolean,System.Single,System.Single,System.Single,UnityEngine.Transform)">
            <summary>
            Play background music
            </summary>
            <param name="clip">The audio clip to play</param>
            <param name="volume"> The volume the music will have</param>
            <param name="loop">Wether the music is looped</param>
            <param name="persist"> Whether the audio persists in between scene changes</param>
            <param name="fadeInValue">How many seconds it needs for the audio to fade in/ reach target volume (if higher than current)</param>
            <param name="fadeOutValue"> How many seconds it needs for the audio to fade out/ reach target volume (if lower than current)</param>
            <param name="currentMusicfadeOutSeconds"> How many seconds it needs for current music audio to fade out. It will override its own fade out seconds. If -1 is passed, current music will keep its own fade out seconds</param>
            <param name="sourceTransform">The transform that is the source of the music (will become 3D audio). If 3D audio is not wanted, use null</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlaySound(UnityEngine.AudioClip)">
            <summary>
            Play a sound fx
            </summary>
            <param name="clip">The audio clip to play</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlaySound(UnityEngine.AudioClip,System.Single)">
            <summary>
            Play a sound fx
            </summary>
            <param name="clip">The audio clip to play</param>
            <param name="volume"> The volume the music will have</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlaySound(UnityEngine.AudioClip,System.Boolean)">
            <summary>
            Play a sound fx
            </summary>
            <param name="clip">The audio clip to play</param>
            <param name="loop">Wether the sound is looped</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlaySound(UnityEngine.AudioClip,System.Single,System.Boolean,UnityEngine.Transform)">
            <summary>
            Play a sound fx
            </summary>
            <param name="clip">The audio clip to play</param>
            <param name="volume"> The volume the music will have</param>
            <param name="loop">Wether the sound is looped</param>
            <param name="sourceTransform">The transform that is the source of the sound (will become 3D audio). If 3D audio is not wanted, use null</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlayUISound(UnityEngine.AudioClip)">
            <summary>
            Play a UI sound fx
            </summary>
            <param name="clip">The audio clip to play</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PlayUISound(UnityEngine.AudioClip,System.Single)">
            <summary>
            Play a UI sound fx
            </summary>
            <param name="clip">The audio clip to play</param>
            <param name="volume"> The volume the music will have</param>
            <returns>The ID of the created Audio object</returns>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.StopAll">
            <summary>
            Stop all audio playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.StopAll(System.Single)">
            <summary>
            Stop all audio playing
            </summary>
            <param name="fadeOutSeconds"> How many seconds it needs for all music audio to fade out. It will override  their own fade out seconds. If -1 is passed, all music will keep their own fade out seconds</param>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.StopAllMusic">
            <summary>
            Stop all music playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.StopAllMusic(System.Single)">
            <summary>
            Stop all music playing
            </summary>
            <param name="fadeOutSeconds"> How many seconds it needs for all music audio to fade out. It will override  their own fade out seconds. If -1 is passed, all music will keep their own fade out seconds</param>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.StopAllSounds">
            <summary>
            Stop all sound fx playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.StopAllUISounds">
            <summary>
            Stop all UI sound fx playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PauseAll">
            <summary>
            Pause all audio playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PauseAllMusic">
            <summary>
            Pause all music playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PauseAllSounds">
            <summary>
            Pause all sound fx playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.PauseAllUISounds">
            <summary>
            Pause all UI sound fx playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.ResumeAll">
            <summary>
            Resume all audio playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.ResumeAllMusic">
            <summary>
            Resume all music playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.ResumeAllSounds">
            <summary>
            Resume all sound fx playing
            </summary>
        </member>
        <member name="M:Framework.Unity.Sound.SoundManager.ResumeAllUISounds">
            <summary>
            Resume all UI sound fx playing
            </summary>
        </member>
        <member name="F:Framework.Unity.Sqlite.SqliteHelper.dbConnection">
            <summary>
            数据库连接定义
            </summary>
        </member>
        <member name="F:Framework.Unity.Sqlite.SqliteHelper.dbCommand">
            <summary>
            SQL命令定义
            </summary>
        </member>
        <member name="F:Framework.Unity.Sqlite.SqliteHelper.dataReader">
            <summary>
            数据读取定义
            </summary>
        </member>
        <member name="M:Framework.Unity.Sqlite.SqliteHelper.#ctor(System.String)">
            <summary>
            构造函数    
            </summary>
            <param name="connectionString">数据库连接字符串</param>
        </member>
        <member name="M:Framework.Unity.Sqlite.SqliteHelper.ExecuteQuery(System.String)">
            <summary>
            执行SQL命令
            </summary>
            <returns>The query.</returns>
            <param name="queryString">SQL命令字符串</param>
        </member>
        <member name="M:Framework.Unity.Sqlite.SqliteHelper.CloseConnection">
            <summary>
            关闭数据库连接
            </summary>
        </member>
        <member name="M:Framework.Unity.Sqlite.SqliteHelper.ReadFullTable(System.String)">
            <summary>
            读取整张数据表
            </summary>
            <returns>The full table.</returns>
            <param name="tableName">数据表名称</param>
        </member>
        <member name="M:Framework.Unity.Sqlite.SqliteHelper.InsertValues(System.String,System.String[])">
            <summary>
            向指定数据表中插入数据
            </summary>
            <returns>The values.</returns>
            <param name="tableName">数据表名称</param>
            <param name="values">插入的数值</param>
        </member>
        <member name="M:Framework.Unity.Sqlite.SqliteHelper.UpdateValues(System.String,System.String[],System.String[],System.String,System.String,System.String)">
            <summary>
            更新指定数据表内的数据
            </summary>
            <returns>The values.</returns>
            <param name="tableName">数据表名称</param>
            <param name="colNames">字段名</param>
            <param name="colValues">字段名对应的数据</param>
            <param name="key">关键字</param>
            <param name="value">关键字对应的值</param>
        </member>
        <member name="M:Framework.Unity.Sqlite.SqliteHelper.DeleteValuesOR(System.String,System.String[],System.String[],System.String[])">
            <summary>
            删除指定数据表内的数据
            </summary>
            <returns>The values.</returns>
            <param name="tableName">数据表名称</param>
            <param name="colNames">字段名</param>
            <param name="colValues">字段名对应的数据</param>
        </member>
        <member name="M:Framework.Unity.Sqlite.SqliteHelper.DeleteValuesAND(System.String,System.String[],System.String[],System.String[])">
            <summary>
            删除指定数据表内的数据
            </summary>
            <returns>The values.</returns>
            <param name="tableName">数据表名称</param>
            <param name="colNames">字段名</param>
            <param name="colValues">字段名对应的数据</param>
        </member>
        <member name="M:Framework.Unity.Sqlite.SqliteHelper.CreateTable(System.String,System.String[],System.String[])">
            <summary>
            创建数据表
            </summary> +
            <returns>The table.</returns>
            <param name="tableName">数据表名</param>
            <param name="colNames">字段名</param>
            <param name="colTypes">字段名类型</param>
        </member>
        <member name="M:Framework.Unity.Sqlite.SqliteHelper.ReadTable(System.String,System.String[],System.String[],System.String[],System.String[])">
            <summary>
            Reads the table.
            </summary>
            <returns>The table.</returns>
            <param name="tableName">Table name.</param>
            <param name="items">Items.</param>
            <param name="colNames">Col names.</param>
            <param name="operations">Operations.</param>
            <param name="colValues">Col values.</param>
        </member>
        <member name="M:Framework.Unity.Tools.CameraExtension.IsVisibleOn3dCamera(UnityEngine.GameObject,UnityEngine.Camera)">
            <summary>
            判断世界坐标系内的物体,摄像机是否可见
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Framework.Unity.Tools.CameraExtension.IsVisibleOn3dCamera(UnityEngine.Vector3,UnityEngine.Camera)">
             <summary>
            判断世界坐标系内的一个点,摄像机是否可见
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="T:Framework.Unity.Tools.Teleport">
            <summary>
            传送门, 只暴露事件
            </summary>
        </member>
        <member name="M:Framework.Unity.Tools.DelayInvoker.RemoveInvoke(System.Object)">
            <summary>
            移除定时回调
            </summary>
            <param name="group"></param>
        </member>
        <member name="T:Framework.Unity.Tools.TimeManager">
            <summary>  
            定时任务管理器  
            </summary>  
        </member>
        <member name="F:Framework.Unity.Tools.TimeManager.taskList">
            <summary>  
            定时任务列表  
            </summary>  
        </member>
        <member name="M:Framework.Unity.Tools.TimeManager.AddTask(System.Single,System.Boolean,Framework.Unity.Tools.TimeTaskDelegate)">
            <summary>  
            添加定时任务  
            </summary>  
            <param name="timeDelay">延时执行时间间隔</param>  
            <param name="repeat">是否可以重复执行</param>  
            <param name="timeTaskCallback">执行回调</param>  
        </member>
        <member name="M:Framework.Unity.Tools.TimeManager.RemoveTask(Framework.Unity.Tools.TimeTaskDelegate)">
            <summary>  
            移除定时任务  
            </summary>  
            <param name="taskToRemove"></param>  
            <returns></returns>  
        </member>
        <member name="M:Framework.Unity.Tools.TimeManager.Tick">
            <summary>  
            执行定时任务  
            </summary>  
        </member>
        <member name="T:Framework.Unity.Tools.TimeTask">
            <summary>  
            定时任务封装类  
            </summary>  
        </member>
        <member name="F:Framework.Unity.Tools.TimeTask._timeDelay">
            <summary>  
            延迟时间  
            </summary>  
        </member>
        <member name="F:Framework.Unity.Tools.TimeTask._timeDelayOnly">
            <summary>  
            延迟时间  
            </summary>  
        </member>
        <member name="F:Framework.Unity.Tools.TimeTask._repeat">
            <summary>  
            是否需要重复执行  
            </summary>  
        </member>
        <member name="F:Framework.Unity.Tools.TimeTask._timeTaskCallBack">
            <summary>  
            回调函数  
            </summary>  
        </member>
        <member name="T:Framework.Unity.Tools.ImageUtils">
            <summary>
            Various functions and utilities to work with images, textures or sprites.
            </summary>
        </member>
        <member name="M:Framework.Unity.Tools.ImageUtils.LoadTexture(System.String)">
            <summary>
            Load an image from disk into a Texture2D
            </summary>
            <param name="path">The full path to the image file</param>
            <returns>Texture2D</returns>
        </member>
        <member name="M:Framework.Unity.Tools.ImageUtils.LoadSprite(System.String)">
            <summary>
            Load an image from disk into a Sprite
            </summary>
            <param name="path">The full path to the image file</param>
            <returns>Sprite</returns>
        </member>
        <member name="M:Framework.Unity.Tools.ImageUtils.GenerateSolidTexture(System.Int32,System.Int32,UnityEngine.Color)">
            <summary>
            Genenrates a solid texture of a specific color and size
            </summary>
            <param name="width">The width of the generated texture</param>
            <param name="height">The height of the generated texture</param>
            <param name="color">The color of the generated texture</param>
            <returns>A solid texture2D</returns>
        </member>
        <member name="M:Framework.Unity.Tools.ImageUtils.GenerateSolidSprite(System.Int32,System.Int32,UnityEngine.Color)">
            <summary>
            Genenrates a solid sprite of a specific color and size
            </summary>
            <param name="width">The width of the generated sprite</param>
            <param name="height">The height of the generated sprite</param>
            <param name="color">The color of the generated sprite</param>
            <returns>A solid Sprite</returns>
        </member>
        <member name="M:Framework.Unity.Tools.ImageUtils.TextureToSprite(UnityEngine.Texture2D)">
            <summary>
            Converts a Texture2D into a Sprite
            </summary>
            <param name="texture">The texture to be converted</param>
            <returns>A sprite</returns>
        </member>
        <member name="M:Framework.Unity.Tools.ImageUtils.SpriteToTexture(UnityEngine.Sprite)">
            <summary>
            Converts a Sprite into a Texture2d
            </summary>
            <param name="sprite">The sprite to be converted</param>
            <returns></returns>
        </member>
        <member name="T:Framework.Unity.Tools.MeshUtils">
            <summary>
            Various functions and utilities to work with meshes, mesh renderers and mesh filters.
            </summary>
        </member>
        <member name="M:Framework.Unity.Tools.MeshUtils.GetSharedMaterialsList(UnityEngine.Transform)">
            <summary>
            Returns a list of all the shared materials used by the transform and its children
            </summary>
            <param name="transform"></param>
            <returns></returns>
        </member>
        <member name="M:Framework.Unity.Tools.MeshUtils.GetSharedMaterialsList(UnityEngine.Transform,System.Boolean)">
            <summary>
            Returns a list of all the shared materials used by the transform and its children
            </summary>
            <param name="transform">The transform to be searched</param>
            <param name="includeInactive">Whether to include inactiver gameobjects in the search</param>
            <returns>A list of materials</returns>
        </member>
        <member name="M:Framework.Unity.Tools.MeshUtils.GetMaterialsList(UnityEngine.Transform)">
            <summary>
            Returns a list of all the materials used by the transform and its children
            </summary>
            <param name="transform"></param>
            <returns></returns>
        </member>
        <member name="M:Framework.Unity.Tools.MeshUtils.GetMaterialsList(UnityEngine.Transform,System.Boolean)">
            <summary>
            Returns a list of all the materials used by the transform and its children
            </summary>
            <param name="transform">The transform to be searched</param>
            <param name="includeInactive">Whether to include inactiver gameobjects in the search</param>
            <returns>A list of materials</returns>
        </member>
        <member name="M:Framework.Unity.Tools.StringUtils.GenerateUniqueString">
            <summary>
            Generates a unique string
            </summary>
            <returns>A unique alphanumeric string</returns>
        </member>
        <member name="M:Framework.Unity.Tools.StringUtils.IsUnique(System.String,System.String[])">
            <summary>
            Checks if a string is unique among a list of other strings
            </summary>
            <param name="str">The string to be checked for uniqueness</param>
            <param name="otherStrings">An array of strings to check the provided str against</param>
            <returns>True if it is unique, false if it is not</returns>
        </member>
        <member name="T:Framework.Unity.UGUI_Expand.UIButton">
            <summary>
            UIButton
            </summary>
        </member>
        <member name="T:Framework.Unity.UGUI_Expand.Window">
            <summary>
            Includes a few fixes of my own, mainly to tidy up duplicates, remove unneeded stuff and testing. (nothing major, all the crew above did the hard work!)
            </summary>
        </member>
        <member name="M:Framework.Unity.UI.BasePanel.OnEnter">
            <summary>
            页面进入显示，可交互
            </summary>
        </member>
        <member name="M:Framework.Unity.UI.BasePanel.OnPause">
            <summary>
            页面暂停（弹出了其他页面），不可交互
            </summary>
        </member>
        <member name="M:Framework.Unity.UI.BasePanel.OnResume">
            <summary>
            页面继续显示（其他页面关闭），可交互
            </summary>
        </member>
        <member name="M:Framework.Unity.UI.BasePanel.OnExit">
            <summary>
            本页面被关闭（移除），不再显示在界面上
            </summary>
        </member>
        <member name="M:Framework.Unity.UI.UGUIPanel.OnEnter">
            <summary>
            页面进入显示，可交互
            </summary>
        </member>
        <member name="M:Framework.Unity.UI.UGUIPanel.OnPause">
            <summary>
            页面暂停（弹出了其他页面），不可交互
            </summary>
        </member>
        <member name="M:Framework.Unity.UI.UGUIPanel.OnResume">
            <summary>
            页面继续显示（其他页面关闭），可交互
            </summary>
        </member>
        <member name="M:Framework.Unity.UI.UGUIPanel.OnExit">
            <summary>
            本页面被关闭（移除），不再显示在界面上
            </summary>
        </member>
        <member name="T:Framework.Unity.UI.UIManager">
            <summary>
            单例模式的核心：
            1.只在该类内定义一个静态的对象，该对象在外界访问，在内部构造
            2.构造函数私有化
            </summary>
        </member>
        <member name="M:Framework.Unity.UI.UIManager.PopPanel(Framework.Unity.UI.BasePanel)">
            <summary>
            判断栈顶页面是否和指定页面相同，如果相同出栈，慎用
            </summary>
            <param name="varPanel"></param>
        </member>
        <member name="M:Framework.Unity.UI.UIManager.ShowPanel(System.String,Framework.Unity.UI.UIManager.CanvasType)">
            <summary>
            显示页面，栈不发生变化
            </summary>
            <param name="panelType"></param>
            <param name="uiStayCanvas"></param>
            <returns></returns>
        </member>
        <member name="T:Framework.Runtime.DebuggerActiveWindowType">
            <summary>
            调试器激活窗口类型。
            </summary>
        </member>
        <member name="F:Framework.Runtime.DebuggerActiveWindowType.Auto">
            <summary>
            自动（发布版本状态关闭，开发版本状态打开）。
            </summary>
        </member>
        <member name="F:Framework.Runtime.DebuggerActiveWindowType.Close">
            <summary>
            关闭。
            </summary>
        </member>
        <member name="F:Framework.Runtime.DebuggerActiveWindowType.Open">
            <summary>
            打开。
            </summary>
        </member>
        <member name="T:Framework.Runtime.DebuggerComponent">
            <summary>
            调试组件。
            </summary>
        </member>
        <member name="F:Framework.Runtime.DebuggerComponent.DefaultIconRect">
            <summary>
            默认调试器漂浮框大小。
            </summary>
        </member>
        <member name="F:Framework.Runtime.DebuggerComponent.DefaultWindowRect">
            <summary>
            默认调试器窗口大小。
            </summary>
        </member>
        <member name="F:Framework.Runtime.DebuggerComponent.DefaultWindowScale">
            <summary>
            默认调试器窗口缩放比例。
            </summary>
        </member>
        <member name="P:Framework.Runtime.DebuggerComponent.ActiveWindow">
            <summary>
            获取或设置调试窗口是否激活。
            </summary>
        </member>
        <member name="P:Framework.Runtime.DebuggerComponent.ShowFullWindow">
            <summary>
            获取或设置是否显示完整调试器界面。
            </summary>
        </member>
        <member name="P:Framework.Runtime.DebuggerComponent.IconRect">
            <summary>
            获取或设置调试器漂浮框大小。
            </summary>
        </member>
        <member name="P:Framework.Runtime.DebuggerComponent.WindowRect">
            <summary>
            获取或设置调试器窗口大小。
            </summary>
        </member>
        <member name="P:Framework.Runtime.DebuggerComponent.WindowScale">
            <summary>
            获取或设置调试器窗口缩放比例。
            </summary>
        </member>
        <member name="M:Framework.Runtime.DebuggerComponent.Awake">
            <summary>
            游戏框架组件初始化。
            </summary>
        </member>
        <member name="M:Framework.Runtime.DebuggerComponent.RegisterDebuggerWindow(System.String,Framework.Debugger.IDebuggerWindow,System.Object[])">
            <summary>
            注册调试窗口。
            </summary>
            <param name="path">调试窗口路径。</param>
            <param name="debuggerWindow">要注册的调试窗口。</param>
            <param name="args">初始化调试窗口参数。</param>
        </member>
        <member name="M:Framework.Runtime.DebuggerComponent.GetDebuggerWindow(System.String)">
            <summary>
            获取调试窗口。
            </summary>
            <param name="path">调试窗口路径。</param>
            <returns>要获取的调试窗口。</returns>
        </member>
        <member name="T:Framework.Debugger.DebuggerManager">
            <summary>
            调试管理器。
            </summary>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.#ctor">
            <summary>
            初始化调试管理器的新实例。
            </summary>
        </member>
        <member name="P:Framework.Debugger.DebuggerManager.ActiveWindow">
            <summary>
            获取或设置调试窗口是否激活。
            </summary>
        </member>
        <member name="P:Framework.Debugger.DebuggerManager.DebuggerWindowRoot">
            <summary>
            调试窗口根节点。
            </summary>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.Update(System.Single,System.Single)">
            <summary>
            调试管理器轮询。
            </summary>
            <param name="elapseSeconds">逻辑流逝时间，以秒为单位。</param>
            <param name="realElapseSeconds">真实流逝时间，以秒为单位。</param>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.Shutdown">
            <summary>
            关闭并清理调试管理器。
            </summary>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.RegisterDebuggerWindow(System.String,Framework.Debugger.IDebuggerWindow,System.Object[])">
            <summary>
            注册调试窗口。
            </summary>
            <param name="path">调试窗口路径。</param>
            <param name="debuggerWindow">要注册的调试窗口。</param>
            <param name="args">初始化调试窗口参数。</param>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.GetDebuggerWindow(System.String)">
            <summary>
            获取调试窗口。
            </summary>
            <param name="path">调试窗口路径。</param>
            <returns>要获取的调试窗口。</returns>
        </member>
        <member name="T:Framework.Debugger.DebuggerManager.DebuggerWindowGroup">
            <summary>
            调试窗口组。
            </summary>
        </member>
        <member name="P:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.DebuggerWindowCount">
            <summary>
            获取调试窗口数量。
            </summary>
        </member>
        <member name="P:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.SelectedIndex">
            <summary>
            获取或设置当前选中的调试窗口索引。
            </summary>
        </member>
        <member name="P:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.SelectedWindow">
            <summary>
            获取当前选中的调试窗口。
            </summary>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.Initialize(System.Object[])">
            <summary>
            初始化调试组。
            </summary>
            <param name="args">初始化调试组参数。</param>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.Shutdown">
            <summary>
            关闭调试组。
            </summary>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.OnEnter">
            <summary>
            进入调试窗口。
            </summary>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.OnLeave">
            <summary>
            离开调试窗口。
            </summary>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.OnUpdate(System.Single,System.Single)">
            <summary>
            调试组轮询。
            </summary>
            <param name="elapseSeconds">逻辑流逝时间，以秒为单位。</param>
            <param name="realElapseSeconds">真实流逝时间，以秒为单位。</param>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.OnDraw">
            <summary>
            调试窗口绘制。
            </summary>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.GetDebuggerWindowNames">
            <summary>
            获取调试组的调试窗口名称集合。
            </summary>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.GetDebuggerWindow(System.String)">
            <summary>
            获取调试窗口。
            </summary>
            <param name="path">调试窗口路径。</param>
            <returns>要获取的调试窗口。</returns>
        </member>
        <member name="M:Framework.Debugger.DebuggerManager.DebuggerWindowGroup.RegisterDebuggerWindow(System.String,Framework.Debugger.IDebuggerWindow)">
            <summary>
            注册调试窗口。
            </summary>
            <param name="path">调试窗口路径。</param>
            <param name="debuggerWindow">要注册的调试窗口。</param>
        </member>
        <member name="T:Framework.Debugger.IDebuggerManager">
            <summary>
            调试管理器接口。
            </summary>
        </member>
        <member name="P:Framework.Debugger.IDebuggerManager.ActiveWindow">
            <summary>
            获取或设置调试窗口是否激活。
            </summary>
        </member>
        <member name="P:Framework.Debugger.IDebuggerManager.DebuggerWindowRoot">
            <summary>
            调试窗口根节点。
            </summary>
        </member>
        <member name="M:Framework.Debugger.IDebuggerManager.RegisterDebuggerWindow(System.String,Framework.Debugger.IDebuggerWindow,System.Object[])">
            <summary>
            注册调试窗口。
            </summary>
            <param name="path">调试窗口路径。</param>
            <param name="debuggerWindow">要注册的调试窗口。</param>
            <param name="args">初始化调试窗口参数。</param>
        </member>
        <member name="M:Framework.Debugger.IDebuggerManager.GetDebuggerWindow(System.String)">
            <summary>
            获取调试窗口。
            </summary>
            <param name="path">调试窗口路径。</param>
            <returns>要获取的调试窗口。</returns>
        </member>
        <member name="T:Framework.Debugger.IDebuggerWindow">
            <summary>
            调试窗口接口。
            </summary>
        </member>
        <member name="M:Framework.Debugger.IDebuggerWindow.Initialize(System.Object[])">
            <summary>
            初始化调试窗口。
            </summary>
            <param name="args">初始化调试窗口参数。</param>
        </member>
        <member name="M:Framework.Debugger.IDebuggerWindow.Shutdown">
            <summary>
            关闭调试窗口。
            </summary>
        </member>
        <member name="M:Framework.Debugger.IDebuggerWindow.OnEnter">
            <summary>
            进入调试窗口。
            </summary>
        </member>
        <member name="M:Framework.Debugger.IDebuggerWindow.OnLeave">
            <summary>
            离开调试窗口。
            </summary>
        </member>
        <member name="M:Framework.Debugger.IDebuggerWindow.OnUpdate(System.Single,System.Single)">
            <summary>
            调试窗口轮询。
            </summary>
            <param name="elapseSeconds">逻辑流逝时间，以秒为单位。</param>
            <param name="realElapseSeconds">真实流逝时间，以秒为单位。</param>
        </member>
        <member name="M:Framework.Debugger.IDebuggerWindow.OnDraw">
            <summary>
            调试窗口绘制。
            </summary>
        </member>
        <member name="T:Framework.Debugger.IDebuggerWindowGroup">
            <summary>
            调试窗口组接口。
            </summary>
        </member>
        <member name="P:Framework.Debugger.IDebuggerWindowGroup.DebuggerWindowCount">
            <summary>
            获取调试窗口数量。
            </summary>
        </member>
        <member name="P:Framework.Debugger.IDebuggerWindowGroup.SelectedIndex">
            <summary>
            获取或设置当前选中的调试窗口索引。
            </summary>
        </member>
        <member name="P:Framework.Debugger.IDebuggerWindowGroup.SelectedWindow">
            <summary>
            获取当前选中的调试窗口。
            </summary>
        </member>
        <member name="M:Framework.Debugger.IDebuggerWindowGroup.GetDebuggerWindowNames">
            <summary>
            获取调试组的调试窗口名称集合。
            </summary>
        </member>
        <member name="M:Framework.Debugger.IDebuggerWindowGroup.GetDebuggerWindow(System.String)">
            <summary>
            获取调试窗口。
            </summary>
            <param name="path">调试窗口路径。</param>
            <returns>要获取的调试窗口。</returns>
        </member>
        <member name="M:Framework.Debugger.IDebuggerWindowGroup.RegisterDebuggerWindow(System.String,Framework.Debugger.IDebuggerWindow)">
            <summary>
            注册调试窗口。
            </summary>
            <param name="path">调试窗口路径。</param>
            <param name="debuggerWindow">要注册的调试窗口。</param>
        </member>
        <member name="M:TransformExtensions.SetX(UnityEngine.Transform,System.Single)">
            <summary>
            	Sets the X position of this transform.
            </summary>
        </member>
        <member name="M:TransformExtensions.SetY(UnityEngine.Transform,System.Single)">
            <summary>
              Sets the Y position of this transform.
            </summary>
        </member>
        <member name="M:TransformExtensions.SetZ(UnityEngine.Transform,System.Single)">
                    Sets the Z position of this transform.
        </member>
        <member name="M:TransformExtensions.SetXY(UnityEngine.Transform,System.Single,System.Single)">
                    Sets the X and Y position of this transform.
        </member>
        <member name="M:TransformExtensions.SetXZ(UnityEngine.Transform,System.Single,System.Single)">
                    Sets the X and Z position of this transform.
        </member>
        <member name="M:TransformExtensions.SetYZ(UnityEngine.Transform,System.Single,System.Single)">
                    Sets the Y and Z position of this transform.
        </member>
        <member name="M:TransformExtensions.SetXYZ(UnityEngine.Transform,System.Single,System.Single,System.Single)">
                    Sets the X, Y and Z position of this transform.
        </member>
        <member name="M:TransformExtensions.TranslateX(UnityEngine.Transform,System.Single)">
                    Translates this transform along the X axis.
        </member>
        <member name="M:TransformExtensions.TranslateY(UnityEngine.Transform,System.Single)">
                    Translates this transform along the Y axis.
        </member>
        <member name="M:TransformExtensions.TranslateZ(UnityEngine.Transform,System.Single)">
                    Translates this transform along the Z axis.
        </member>
        <member name="M:TransformExtensions.TranslateXY(UnityEngine.Transform,System.Single,System.Single)">
                    Translates this transform along the X and Y axes.
        </member>
        <member name="M:TransformExtensions.TranslateXZ(UnityEngine.Transform,System.Single,System.Single)">
                    Translates this transform along the X and Z axes.
        </member>
        <member name="M:TransformExtensions.TranslateYZ(UnityEngine.Transform,System.Single,System.Single)">
                    Translates this transform along the Y and Z axes.
        </member>
        <member name="M:TransformExtensions.TranslateXYZ(UnityEngine.Transform,System.Single,System.Single,System.Single)">
                    Translates this transform along the X, Y and Z axis.
        </member>
        <member name="M:TransformExtensions.SetLocalX(UnityEngine.Transform,System.Single)">
                    Sets the local X position of this transform.
        </member>
        <member name="M:TransformExtensions.SetLocalY(UnityEngine.Transform,System.Single)">
                    Sets the local Y position of this transform.
        </member>
        <member name="M:TransformExtensions.SetLocalZ(UnityEngine.Transform,System.Single)">
                    Sets the local Z position of this transform.
        </member>
        <member name="M:TransformExtensions.SetLocalXY(UnityEngine.Transform,System.Single,System.Single)">
                    Sets the local X and Y position of this transform.
        </member>
        <member name="M:TransformExtensions.SetLocalXZ(UnityEngine.Transform,System.Single,System.Single)">
                    Sets the local X and Z position of this transform.
        </member>
        <member name="M:TransformExtensions.SetLocalYZ(UnityEngine.Transform,System.Single,System.Single)">
                    Sets the local Y and Z position of this transform.
        </member>
        <member name="M:TransformExtensions.SetLocalXYZ(UnityEngine.Transform,System.Single,System.Single,System.Single)">
                    Sets the local X, Y and Z position of this transform.
        </member>
        <member name="M:TransformExtensions.ResetPosition(UnityEngine.Transform)">
                    Sets the position to 0, 0, 0.
        </member>
        <member name="M:TransformExtensions.ResetLocalPosition(UnityEngine.Transform)">
                    Sets the local position to 0, 0, 0.
        </member>
        <member name="M:TransformExtensions.SetScaleX(UnityEngine.Transform,System.Single)">
            			Sets the local X scale of this transform.
        </member>
        <member name="M:TransformExtensions.SetScaleY(UnityEngine.Transform,System.Single)">
                    Sets the local Y scale of this transform.
        </member>
        <member name="M:TransformExtensions.SetScaleZ(UnityEngine.Transform,System.Single)">
                    Sets the local Z scale of this transform.
        </member>
        <member name="M:TransformExtensions.SetScaleXY(UnityEngine.Transform,System.Single,System.Single)">
                    Sets the local X and Y scale of this transform.
        </member>
        <member name="M:TransformExtensions.SetScaleXZ(UnityEngine.Transform,System.Single,System.Single)">
                    Sets the local X and Z scale of this transform.
        </member>
        <member name="M:TransformExtensions.SetScaleYZ(UnityEngine.Transform,System.Single,System.Single)">
                    Sets the local Y and Z scale of this transform.
        </member>
        <member name="M:TransformExtensions.SetScaleXYZ(UnityEngine.Transform,System.Single,System.Single,System.Single)">
                    Sets the local X, Y and Z scale of this transform.
        </member>
        <member name="M:TransformExtensions.ScaleByX(UnityEngine.Transform,System.Single)">
                    Scale this transform in the X direction.
        </member>
        <member name="M:TransformExtensions.ScaleByY(UnityEngine.Transform,System.Single)">
                    Scale this transform in the Y direction.
        </member>
        <member name="M:TransformExtensions.ScaleByZ(UnityEngine.Transform,System.Single)">
                    Scale this transform in the Z direction.
        </member>
        <member name="M:TransformExtensions.ScaleByXY(UnityEngine.Transform,System.Single,System.Single)">
                    Scale this transform in the X, Y direction.
        </member>
        <member name="M:TransformExtensions.ScaleByXZ(UnityEngine.Transform,System.Single,System.Single)">
                    Scale this transform in the X, Z directions.
        </member>
        <member name="M:TransformExtensions.ScaleByYZ(UnityEngine.Transform,System.Single,System.Single)">
                    Scale this transform in the Y and Z directions.
        </member>
        <member name="M:TransformExtensions.ScaleByXY(UnityEngine.Transform,System.Single)">
                    Scale this transform in the X and Y directions.
        </member>
        <member name="M:TransformExtensions.ScaleByXZ(UnityEngine.Transform,System.Single)">
                    Scale this transform in the X and Z directions.
        </member>
        <member name="M:TransformExtensions.ScaleByYZ(UnityEngine.Transform,System.Single)">
                    Scale this transform in the Y and Z directions.
        </member>
        <member name="M:TransformExtensions.ScaleByXYZ(UnityEngine.Transform,System.Single,System.Single,System.Single)">
                    Scale this transform in the X, Y and Z directions.
        </member>
        <member name="M:TransformExtensions.ScaleByXYZ(UnityEngine.Transform,System.Single)">
                    Scale this transform in the X, Y and Z directions.
        </member>
        <member name="M:TransformExtensions.ResetScale(UnityEngine.Transform)">
                    Resets the local scale of this transform in to 1 1 1.
        </member>
        <member name="M:TransformExtensions.FlipX(UnityEngine.Transform)">
            			Negates the X scale.
        </member>
        <member name="M:TransformExtensions.FlipY(UnityEngine.Transform)">
                    Negates the Y scale.
        </member>
        <member name="M:TransformExtensions.FlipZ(UnityEngine.Transform)">
                    Negates the Z scale.
        </member>
        <member name="M:TransformExtensions.FlipXY(UnityEngine.Transform)">
                    Negates the X and Y scale.
        </member>
        <member name="M:TransformExtensions.FlipXZ(UnityEngine.Transform)">
                    Negates the X and Z scale.
        </member>
        <member name="M:TransformExtensions.FlipYZ(UnityEngine.Transform)">
                    Negates the Y and Z scale.
        </member>
        <member name="M:TransformExtensions.FlipXYZ(UnityEngine.Transform)">
                    Negates the X, Y and Z scale.
        </member>
        <member name="M:TransformExtensions.FlipPostive(UnityEngine.Transform)">
                    Sets all scale values to the absolute values.
        </member>
        <member name="M:TransformExtensions.RotateAroundX(UnityEngine.Transform,System.Single)">
            			Rotates the transform around the X axis.
        </member>
        <member name="M:TransformExtensions.RotateAroundY(UnityEngine.Transform,System.Single)">
                    Rotates the transform around the Y axis.
        </member>
        <member name="M:TransformExtensions.RotateAroundZ(UnityEngine.Transform,System.Single)">
                    Rotates the transform around the Z axis.
        </member>
        <member name="M:TransformExtensions.SetRotationX(UnityEngine.Transform,System.Single)">
                    Sets the X rotation.
        </member>
        <member name="M:TransformExtensions.SetRotationY(UnityEngine.Transform,System.Single)">
                    Sets the Y rotation.
        </member>
        <member name="M:TransformExtensions.SetRotationZ(UnityEngine.Transform,System.Single)">
                    Sets the Z rotation.
        </member>
        <member name="M:TransformExtensions.SetLocalRotationX(UnityEngine.Transform,System.Single)">
                    Sets the local X rotation.
        </member>
        <member name="M:TransformExtensions.SetLocalRotationY(UnityEngine.Transform,System.Single)">
                    Sets the local Y rotation.
        </member>
        <member name="M:TransformExtensions.SetLocalRotationZ(UnityEngine.Transform,System.Single)">
                    Sets the local Z rotation.
        </member>
        <member name="M:TransformExtensions.ResetRotation(UnityEngine.Transform)">
                    Resets the rotation to 0, 0, 0.
        </member>
        <member name="M:TransformExtensions.ResetLocalRotation(UnityEngine.Transform)">
                    Resets the local rotation to 0, 0, 0.
        </member>
        <member name="M:TransformExtensions.ResetLocal(UnityEngine.Transform)">
            			Resets the ;local position, local rotation, and local scale.
        </member>
        <member name="M:TransformExtensions.Reset(UnityEngine.Transform)">
                    Resets the position, rotation, and local scale.
        </member>
        <member name="M:TransformExtensions.SelfAndAllChildren(UnityEngine.Transform)">
                    A lazy enumerable of this objects transform, and all it's children down the hierarchy.
            			
                    @version_e_1_1
        </member>
        <member name="M:VectorExtensions.Perp(UnityEngine.Vector2)">
                    Returns the vector rotated 90 degrees counter-clockwise. This vector is
                    always perpendicular to the given vector.
            
                    The perp dot product can be caluclted using this:
                        var perpDotPorpduct = Vector2.Dot(v1.Perp(), v2);
        </member>
        <member name="M:VectorExtensions.Proj(UnityEngine.Vector2,UnityEngine.Vector2)">
                    Returns the projection of this vector onto the given base.
        </member>
        <member name="M:VectorExtensions.Rej(UnityEngine.Vector2,UnityEngine.Vector2)">
                    Returns the rejection of this vector onto the given base.
            
                    The sum of a vector's projection and rejection on a base is
                    equal to the original vector.
        </member>
        <member name="M:VectorExtensions.Proj(UnityEngine.Vector3,UnityEngine.Vector3)">
                    Returns the projection of this vector onto the given base.
        </member>
        <member name="M:VectorExtensions.Rej(UnityEngine.Vector3,UnityEngine.Vector3)">
                    Returns the rejection of this vector onto the given base.
            
                    The sum of a vector's projection and rejection on a base is
                    equal to the original vector.
        </member>
        <member name="M:VectorExtensions.Proj(UnityEngine.Vector4,UnityEngine.Vector4)">
                    Returns the projection of this vector onto the given base.
        </member>
        <member name="M:VectorExtensions.Rej(UnityEngine.Vector4,UnityEngine.Vector4)">
                    Returns the rejection of this vector onto the given base.
            
                    The sum of a vector's projection and rejection on a base is
                    equal to the original vector.
        </member>
        <member name="M:DebugShow.HandleLog(System.String,System.String,UnityEngine.LogType)">
            <summary>
            /// </summary>    
            /// <param name="logString">错误信息</param>    /// 
            <param name="stackTrace">跟踪堆栈</param>    /// 
            <param name="type">错误类型</param>    
        </member>
        <member name="M:LogReplace.LogFormat(UnityEngine.LogType,UnityEngine.Object,System.String,System.Object[])">
            <summary>
            重写日志输出
            </summary>
            <param name="logType"></param>
            <param name="context"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:LogReplace.LogException(System.Exception,UnityEngine.Object)">
            <summary>
            重写错误日志输出
            </summary>
            <param name="exception"></param>
            <param name="context"></param>
        </member>
        <member name="F:Gender.man">
            <summary>
            男
            </summary>
        </member>
        <member name="F:Gender.woman">
            <summary>
            女
            </summary>
        </member>
        <member name="M:Interface.Task.ITaskHint.FinishTask(System.String,System.Boolean)">
            <summary>
            通知完成了任务
            </summary>
            <param name="varText"></param>
            <param name="isLast"></param>
        </member>
        <member name="M:Interface.Task.ITaskHint.DoTask(System.String)">
            <summary>
            通知做任务
            </summary>
            <param name="varText"></param>
        </member>
        <member name="M:Interface.Task.ITaskHint.OpenHint">
            <summary>
            开启做任务提示
            </summary>
        </member>
        <member name="M:Interface.Task.ITaskHint.CloseHint">
            <summary>
            关闭做任务提示
            </summary>
        </member>
        <member name="M:Interface.Task.ITaskSystem.AcceptTask(System.Int32)">
            <summary>
            接取某个任务
            </summary>
        </member>
        <member name="M:Interface.Task.ITaskSystem.AcceptTask(System.Collections.Generic.List{System.Int32})">
            <summary>
            接取多个任务
            </summary>
            <param name="varTaskIdList"></param>
        </member>
        <member name="M:Interface.Task.ITaskSystem.FinishTask(System.Int32)">
            <summary>
            完成某个任务
            </summary>
            <param name="varTaskId"></param>
        </member>
        <member name="M:Interface.Task.ITaskSystem.CommitTask(System.Int32,System.Single)">
            <summary>
            提交道具对应任务
            </summary>
            <param name="varItemId">道具id</param>
            <param name="varState">道具状态</param>
        </member>
        <member name="M:Interface.Task.ITaskSystem.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:Interface.Task.ITaskSystem.Exit">
            <summary>
            退出，不是关闭程序
            </summary>
        </member>
        <member name="T:Model.Item">
            <summary>
            道具基础类
            </summary>
        </member>
        <member name="T:Model.Task_Hint">
            <summary>
            任务基础类
            </summary>
        </member>
        <member name="T:Vive.Global">
            <summary>
            Vive全局变量类
            </summary>
        </member>
        <member name="F:Vive.Global.m_rightHandObj">
            <summary>
            右手物品
            </summary>
        </member>
        <member name="F:Vive.Global.m_leftHandObj">
            <summary>
            左手物品
            </summary>
        </member>
        <member name="F:Vive.Global.IsRightGripPressed">
            <summary>
            右手柄抓取键是否按下
            </summary>
        </member>
        <member name="F:Vive.Global.IsLeftGripPressed">
            <summary>
            左手柄抓取键否按下
            </summary>
        </member>
        <member name="F:Vive.Global.IsRightTriggerPressed">
            <summary>
            右手柄扳机键是否按下
            </summary>
        </member>
        <member name="F:Vive.Global.IsLeftTriggerPressed">
            <summary>
            左手柄抓取键否按下
            </summary>
        </member>
        <member name="F:Vive.Global.RightController">
            <summary>
            右手柄控制器
            </summary>
        </member>
        <member name="F:Vive.Global.LeftController">
            <summary>
            左手柄控制器
            </summary>
        </member>
        <member name="F:Vive.Global.LeftControllerTag">
            <summary>
            左手柄控制器Tag
            </summary>
        </member>
        <member name="F:Vive.Global.RightControllerTag">
            <summary>
            右手柄控制器Tag
            </summary>
        </member>
        <member name="F:Vive.OperatType.Touch_Stay">
            <summary>
            手柄停留道具几秒
            </summary>
        </member>
        <member name="F:Vive.OperatType.Touch_Grip_Trigger">
            <summary>
            手柄触摸到道具按下侧边键抓起，再按下扳机键
            </summary>
        </member>
        <member name="F:Vive.OperatType.Touch_Trigger">
            <summary>
            手柄触摸到道具按下扳机键
            </summary>
        </member>
        <member name="F:Vive.OperatType.Touch_Trigger_PlayAnim">
            <summary>
            手柄触摸到道具按下扳机键触发动画，动画结束
            </summary>
        </member>
        <member name="F:Vive.OperatType.Touch_Grip_SwingJoint">
            <summary>
            手柄触摸到道具按下侧边键跟随手只沿一个轴摆动
            </summary>
        </member>
        <member name="F:Vive.OperatType.Touch_Grip_Swing">
            <summary>
            同上，但没有铰链效果
            </summary>
        </member>
        <member name="F:Vive.SwingType.X">
            <summary>
            绕x轴旋转
            </summary>
        </member>
        <member name="F:Vive.SwingType.Y">
            <summary>
            绕y轴旋转
            </summary>
        </member>
        <member name="F:Vive.SwingType.Z">
            <summary>
            绕z轴旋转
            </summary>
        </member>
        <member name="F:ItemType.StaticLook">
            <summary>
            静态只能看
            </summary>
        </member>
        <member name="F:ItemType.Pickup">
            <summary>
            可拾取
            </summary>
        </member>
        <member name="F:ItemType.PickupWear">
            <summary>
            可拾取穿戴
            </summary>
        </member>
        <member name="F:ItemType.ButtonSwitch">
            <summary>
            按钮开关
            </summary>
        </member>
        <member name="F:ItemType.SwingSwitch">
            <summary>
            摆动开关
            </summary>
        </member>
        <member name="F:ItemType.LaShen">
            <summary>
            拉绳
            </summary>
        </member>
        <member name="F:ItemType.TwistFireware">
            <summary>
            拧固件
            </summary>
        </member>
        <member name="F:ItemType.DismountTool">
            <summary>
            拆装物
            </summary>
        </member>
        <member name="F:ItemType.Strucked">
            <summary>
            被敲击物
            </summary>
        </member>
        <member name="F:ItemType.Beat">
            <summary>
            敲击物
            </summary>
        </member>
        <member name="F:ItemType.Bearing">
            <summary>
            承重物
            </summary>
        </member>
        <member name="F:ItemType.Lifting">
            <summary>
            起重物
            </summary>
        </member>
        <member name="F:ItemType.Suspended">
            <summary>
            被吊物
            </summary>
        </member>
        <member name="F:ItemType.Fixture">
            <summary>
            固定物
            </summary>
        </member>
    </members>
</doc>
